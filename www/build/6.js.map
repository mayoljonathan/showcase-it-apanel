{"version":3,"sources":["../../src/pages/analytics/analytics.module.ts","../../src/pages/analytics/analytics.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACJ;AAU5C,IAAa,mBAAmB;IAAhC;IAAkC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAtB,mBAAmB;IAR/B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,iEAAa;SACd;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,iEAAa,CAAC;SACxC;KACF,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZU;AAC0B;AAGF;AAE7B;AAOrC,IAAa,aAAa;IAOxB,uBACS,OAAsB,EACtB,YAA0B,EAC1B,WAAwB;QAFxB,YAAO,GAAP,OAAO,CAAe;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QARjC,UAAK,GAAY,IAAI,CAAC;QAEtB,gBAAW,GAAe,EAAE,CAAC;QAC7B,cAAS,GAAgB,EAAE,CAAC;IAQ5B,CAAC;IAED,sCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAChC,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAI;QAAb,iBAgBC;QAfC,mBAAmB;QACnB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC;aAC5B,SAAS,CAAC,cAAK,YAAI,CAAC,KAAK,EAAV,CAAU,CAAC;aAC1B,SAAS,CAAC,eAAK;YACd,EAAE,EAAC,IAAI,KAAK,cAAc,CAAC,EAAC;gBAC1B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,MAAM,KAAK,IAAI,EAAjB,CAAiB,CAAC;gBACzD,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI,EAAC,CAAC;oBAC9B,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAK,YAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ;wBACnF,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;oBACjC,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC;YAAA,IAAI,EAAC;gBACJ,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,CAAC,uBAAuB,GAAG,IAAI,GAAG,KAAK,CAAC;IAClG,CAAC;IAED,mCAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEH,oBAAC;AAAD,CAAC;AAhDY,aAAa;IALzB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;OACG;KAC9B,CAAC;gFAS+B;QACR,uEAAY;QACb,UAAW;AAsClC;SAhDY,aAAa,e","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AnalyticsPage } from './analytics';\n\n@NgModule({\n  declarations: [\n    AnalyticsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AnalyticsPage),\n  ],\n})\nexport class AnalyticsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/analytics/analytics.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\nimport { User } from \"../../shared/models/\";\nimport { CacheService,UserService } from \"../../shared/services/\";\n\nimport \"rxjs/add/operator/takeWhile\";\n\n@IonicPage()\n@Component({\n  selector: 'page-analytics',\n  templateUrl: 'analytics.html',\n})\nexport class AnalyticsPage {\n\n  alive: boolean = true;\n\n  onlineUsers: Array<any> = [];\n  usersList: Array<User> = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public cacheService: CacheService,\n    public userService: UserService,\n  ) {\n  \n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AnalyticsPage');\n    this.getUsers('all');\n    this.getUsers('online_users');\n  }\n\n  getUsers(type){\n    //all, online_users\n    this.userService.getUsers(type)\n      .takeWhile(()=> this.alive)\n      .subscribe(users=>{\n        if(type === 'online_users'){\n          this.onlineUsers = users.filter((u) => u.$value === true)\n          this.onlineUsers.forEach((user,i)=>{\n            this.userService.getUserData(user.$key).takeWhile(()=> this.alive).subscribe(userData=>{\n              this.onlineUsers[i] = userData;\n            });\n          });\n        }else{\n          this.usersList = users;\n        }\n      });\n  }\n\n  ionViewCanEnter(){\n    return this.cacheService.isLoggedIn && this.cacheService.isDoneCheckingAdminData ? true : false;\n  }\n\n  ngOnDestroy(){\n    console.log('Destroying analytics');\n    this.alive = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/analytics/analytics.ts"],"sourceRoot":""}